name: ${self:service}-${opt:stage, 'dev'}-HelloWorld  # NOTE: Specify the state machine name
type: EXPRESS
# role: arn:aws:iam::${aws:accountId}:role/${self:service}-${opt:stage, 'dev'}-Role
loggingConfig:
  level: ALL
  includeExecutionData: true
  destinations:
    - Fn::GetAtt: [HelloWorldStateMachineLogGroup, Arn]  # NOTE: Specify the log group name for the state machine
events:
  - http:
      path: /helloworld  # NOTE: Specify the path for API Gateway
      method: post
      # iamRole: arn:aws:iam::${aws:accountId}:role/${self:service}-${opt:stage, 'dev'}-Role
      integration: aws
      action: StartSyncExecution
      request:
        template:  # NOTE: Specify the state machine name
          application/json: |
            {
              "input": "{\"payload\": $util.escapeJavaScript($input.json('$')), \"authorization\": \"$util.escapeJavaScript($input.params().header.get('Authorization'))\"}",
              "stateMachineArn":"arn:aws:states:${self:provider.region}:${aws:accountId}:stateMachine:${self:service}-${opt:stage, 'dev'}-HelloWorld"
            }
      response:
        template:
          application/json: |
            #set($outputJson = $util.parseJson($input.json('$.output')))
            #set($context.responseOverride.status = $util.parseJson($outputJson).statusCode)
            $util.parseJson($outputJson).body
definition:
  Comment: "For HelloWorld"  # NOTE: Specify the comment for the state machine
  StartAt: HelloWorld
  States:
    HelloWorld:
      Type: Task
      Next: HelloWorld2
      Resource:
        Fn::GetAtt: [hello, Arn]
    HelloWorld2:
      Type: Task
      End: True
      Resource:
        Fn::GetAtt: [hello, Arn]
